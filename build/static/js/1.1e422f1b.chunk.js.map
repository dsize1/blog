{"version":3,"sources":["components/stateless_component/ColorPicker.js","components/stateless_component/ColorSelector.js","components/container_component/PixelPainter.js"],"names":["ColorPicker","props","react_default","a","createElement","type","value","color","onChange","Button","text","isPickingColor","onClick","ColorSelector","commonColors","map","idx","key","style","backgroundColor","name","StyledPixelPainter","Styled","div","_templateObject","theme","PixelPainter","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pixelData","width","height","clientsCount","factor","offsetX","offsetY","scale","origin","lastX","lastY","handelMouseEnter","bind","assertThisInitialized","pickColor","drawDot","handleColorPickerClick","handleColorPickerChange","handleColorSelectorChange","e","_this2","stopPropagation","setState","target","offsetLeft","clientX","offsetTop","clientY","handleMagnifyingLensEnlarge","handleMagnifyingLensMove","throttle","leading","addEventListener","onmouseleave","removeEventListener","onclick","preventDefault","deltaY","concat","dot","Array","from","it","toString","padStart","x","y","p","ctx1","getImageData","data","rgba2Hex","ws","emit","fillStyle","fillRect","ctx2","_this3","io","DrawingBoard","MagnifyingLens","imageRendering","getContext","alpha","window","on","imgBinaryData","blob","Blob","Uint8Array","tmpURL","URL","createObjectURL","image","Image","src","onload","drawImage","count","opList","forEach","close","_this4","left","top","transform","transformOrigin","className","ref","canvas","stateless_component_ColorPicker","stateless_component_ColorSelector","Component"],"mappings":"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","file":"static/js/1.1e422f1b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '../stateless_component/Button'\r\n\r\nconst ColorPicker = (props) => {\r\n  return (\r\n    <div>\r\n      <label>\r\n        画笔颜色： \r\n        <input type='color' value={props.color} onChange={props.onChange}/>\r\n      </label>        \r\n      <Button \r\n        text={props.isPickingColor ? '正在取色' : '开始取色'}\r\n        onClick={props.onClick}/>\r\n    </div>)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n  color: PropTypes.string.isRequired,\r\n  isPickingColor: PropTypes.bool.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ColorPicker","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ColorSelector = (props) => {\r\n  return (\r\n    <div \r\n      onChange={props.onChange}>\r\n      {props.commonColors.map((color, idx) => (\r\n        < label key={idx} style={{backgroundColor: color}}>\r\n          <input \r\n            type='radio'\r\n            name='color-selector'\r\n            value={color}\r\n          />\r\n        </label>)\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nColorSelector.propTypes = {\r\n  commonColors: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ColorSelector","import React, {Component} from 'react'\r\nimport io from 'socket.io-client'\r\nimport Styled from 'styled-components'\r\nimport ColorPicker from '../stateless_component/ColorPicker'\r\nimport ColorSelector from '../stateless_component/ColorSelector'\r\nimport throttle from 'lodash.throttle'\r\n\r\nconst StyledPixelPainter = Styled.div`\r\n  color: ${(props) => props.theme.color};\r\n  & .drawing-board {\r\n    margin: 0 auto 1rem;\r\n    display: block;\r\n    transition: all .5s ease-in-out;\r\n    box-shadow: 0px 0px 2px rgba(30, 30, 30, 1);\r\n  }\r\n\r\n  & .drawing-board:hover {\r\n    box-shadow: 0px 0px 10px rgba(30, 30, 30, 0.8);\r\n    transform: translate(0, -2px) \r\n  }\r\n\r\n  & .magnifying-lens {\r\n    width: 200px;\r\n    height: 200px;\r\n    overflow: hidden;\r\n    color: transparent;\r\n    position: relative;\r\n    border: 5px solid #333;\r\n    box-shadow: inset 0px 0px 75px rgba(128, 128, 128, 0.8);\r\n    border-radius: 50%;\r\n    background-color: rgba(248, 248, 248, 0.8);\r\n  }\r\n\r\n  & .point {\r\n    width: 1px;\r\n    height: 1px;\r\n    position: absolute;\r\n    left: 100px;\r\n    top: 100px;\r\n    background-color: #ff0000;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  & .magnifying-lens canvas {\r\n    position: absolute\r\n  }\r\n\r\n  & .tool-bar {\r\n    display: flex;\r\n    margin: 1rem auto;\r\n    max-width: 900px;\r\n  }\r\n  & .tool-bar>div:nth-of-type(2) {\r\n    padding: 1rem;\r\n    padding-left: 5rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n  & .tool-bar>div:nth-of-type(2)>* {\r\n    margin-top: 1rem;\r\n  }\r\n  & .tool-bar>div:nth-of-type(2)>p i {\r\n    color: red;\r\n  }\r\n  & .tool-bar>div:nth-of-type(2)>div:nth-of-type(1) {\r\n    display: flex;\r\n  }\r\n\r\n  & .tool-bar>div:nth-of-type(2)>div:nth-of-type(1)>* {\r\n    margin-right: 1rem;\r\n  }\r\n  & .tool-bar>div:nth-of-type(2)>div:nth-of-type(2) {\r\n    display: flex;\r\n  }\r\n  & .tool-bar>div:nth-of-type(2)>div:nth-of-type(2)>label {\r\n    width: 1.25rem;\r\n    height: 1.25rem;\r\n    margin: 0 0.2rem;\r\n    border: 1px solid;\r\n  }\r\n  & .tool-bar>div:nth-of-type(2)>div:nth-of-type(2)>label>input {\r\n    visibility: hidden;\r\n    pointer-events: none;\r\n  }\r\n  &>span {\r\n    margin: 1rem;\r\n    float: right;\r\n  }\r\n`\r\n\r\nclass PixelPainter extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      pixelData: [],\r\n      commonColors: [\r\n        '#000000',\r\n        '#ffffff',\r\n        '#ff0000',\r\n        '#00ff00',\r\n        '#0000ff',\r\n        '#ffff00',\r\n        '#00ffff',\r\n        '#ff00ff',        \r\n        \"#ff5722\",\r\n        \"#faac8e\",        \r\n        \"#f8cb8c\",        \r\n        \"#e91e63\",        \r\n        \"#d7ff07\",        \r\n        \"#97fddc\",\r\n        \"#673ab7\",\r\n        \"#37a93c\",\r\n      ],\r\n      color: '#000000',\r\n      width: 880,\r\n      height: 544,\r\n      isPickingColor: false,\r\n      clientsCount: 0,\r\n      factor: 1,\r\n      offsetX: 200,\r\n      offsetY: 200,\r\n      scale: 'scale(1)',\r\n      origin: 'center',\r\n      lastX: 0,\r\n      lastY: 0,\r\n    }\r\n    this.handelMouseEnter = this.handelMouseEnter.bind(this)\r\n    this.pickColor = this.pickColor.bind(this)\r\n    this.drawDot = this.drawDot.bind(this)\r\n    this.handleColorPickerClick = this.handleColorPickerClick.bind(this)\r\n    this.handleColorPickerChange = this.handleColorPickerChange.bind(this)\r\n    this.handleColorSelectorChange = this.handleColorSelectorChange.bind(this)\r\n  }\r\n\r\n  handelMouseEnter(e) {\r\n    e.stopPropagation()\r\n    this.setState({\r\n      offsetX: 636 + e.target.offsetLeft - e.clientX,\r\n      offsetY: 158 + e.target.offsetTop - e.clientY,\r\n      lastX: e.clientX,\r\n      lastY: e.clientY\r\n    })\r\n    const handleMagnifyingLensEnlarge = this.handleMagnifyingLensEnlarge.bind(this)\r\n    const handleMagnifyingLensMove = throttle(this.handleMagnifyingLensMove.bind(this), 17, { leading: true })\r\n    e.target.addEventListener('mousemove', handleMagnifyingLensMove)\r\n    e.target.addEventListener('mousewheel', handleMagnifyingLensEnlarge)\r\n\r\n    e.target.onmouseleave = (e) => {\r\n\r\n      e.target.removeEventListener(\"mousemove\", handleMagnifyingLensMove)\r\n      e.target.removeEventListener(\"mousewheel\", handleMagnifyingLensEnlarge)\r\n\r\n      this.setState({\r\n        offsetX: 200,\r\n        offsetY: 200,\r\n        factor: 1,\r\n        scale: 'scale(1)',\r\n        origin: 'center',\r\n        lastX: 0,\r\n        lastY: 0,\r\n      })\r\n    }\r\n\r\n    e.target.onclick = (e) => {\r\n      e.stopPropagation()\r\n      this.setState({\r\n        factor: 1,\r\n        scale: 'scale(1)',\r\n      })\r\n      if(this.state.isPickingColor){\r\n        this.pickColor(e)\r\n      } else {\r\n        this.drawDot(e)\r\n      }          \r\n    }\r\n  }\r\n\r\n  handleMagnifyingLensMove (e) {\r\n    this.setState({\r\n      offsetX: this.state.offsetX + (this.state.lastX - e.clientX) * this.state.factor,\r\n      offsetY: this.state.offsetY + (this.state.lastY - e.clientY) * this.state.factor,\r\n      lastX: e.clientX,\r\n      lastY: e.clientY\r\n    })\r\n  }\r\n\r\n  handleMagnifyingLensEnlarge (e) {\r\n    e.preventDefault()\r\n\r\n    let factor\r\n    if (e.deltaY > 0 && this.state.factor < 8) {\r\n      factor = 2 * this.state.factor\r\n    } else if (e.deltaY < 0 && this.state.factor > 1) {\r\n      factor = 0.5 * this.state.factor\r\n    } else {\r\n      return\r\n    }\r\n    const offsetX = 636 + e.target.offsetLeft - e.clientX\r\n    const offsetY = 158 + e.target.offsetTop - e.clientY\r\n    const origin = `${100 - offsetX}px ${100 - offsetY}px`\r\n    const scale = `scale(${factor})`\r\n    this.setState({\r\n      factor,\r\n      offsetX,\r\n      offsetY,\r\n      origin,\r\n      scale,\r\n    })\r\n  }\r\n\r\n  handleColorPickerClick () {\r\n    this.setState({\r\n      isPickingColor: !this.state.isPickingColor\r\n    })\r\n  }\r\n\r\n  handleColorPickerChange (e) {\r\n    this.setState({\r\n      color: e.target.value\r\n    })\r\n  }\r\n\r\n  handleColorSelectorChange (e) {\r\n    this.setState({\r\n      color: e.target.value\r\n    })\r\n  }\r\n\r\n  rgba2Hex (dot) {\r\n    dot = Array.from(dot)\r\n    dot = dot.map(it => it.toString(16).padStart(2, '0'))\r\n    return '#' + dot[0] + dot[1] + dot[2]\r\n  }\r\n\r\n  pickColor (e) {\r\n    const x = e.offsetX\r\n    const y = e.offsetY\r\n    const p = this.ctx1.getImageData(x, y, 1, 1).data\r\n\r\n    this.setState({\r\n      color: this.rgba2Hex(p),\r\n      isPickingColor: false\r\n    })\r\n  }\r\n\r\n  drawDot (e) {\r\n    const x = e.offsetX\r\n    const y = e.offsetY\r\n    this.ws.emit('drawDot', {\r\n      x: x,\r\n      y: y,\r\n      color: this.state.color\r\n    })\r\n    this.ctx1.fillStyle = this.state.color\r\n    this.ctx1.fillRect(x, y, 1, 1)\r\n    this.ctx2.fillStyle = this.state.color\r\n    this.ctx2.fillRect(x, y, 1, 1)\r\n  }\r\n\r\n  componentDidMount () {\r\n    const ws = io('https://www.chengcici.info')\r\n    this.ws = ws\r\n\r\n    const DrawingBoard = this.DrawingBoard\r\n    DrawingBoard.addEventListener('mouseenter', this.handelMouseEnter)\r\n    const MagnifyingLens = this.MagnifyingLens\r\n    DrawingBoard.style.imageRendering = 'pixelated'\r\n    MagnifyingLens.style.imageRendering = 'pixelated'\r\n\r\n    const ctx1 = DrawingBoard.getContext('2d', {alpha: false})\r\n    window.ctx1 = ctx1\r\n    this.ctx1 = ctx1\r\n    const ctx2 = MagnifyingLens.getContext('2d', { alpha: false })\r\n    this.ctx2 = ctx2\r\n\r\n    //arrayBuffer=>blob\r\n    ws.on('init', imgBinaryData => {\r\n      const blob = new Blob([new Uint8Array(imgBinaryData)])\r\n      const tmpURL = URL.createObjectURL(blob)\r\n      const image = new Image()\r\n      image.src = tmpURL\r\n      image.onload = () => {\r\n        this.ctx1.drawImage(image, 0, 0)\r\n        this.ctx2.drawImage(image, 0, 0)\r\n      }\r\n    })\r\n\r\n    ws.on('onlineCount', data => {\r\n      this.setState({\r\n        clientsCount: data.count\r\n      })\r\n    })\r\n\r\n    ws.on('updataDot', opList => {\r\n      opList.forEach(data => {\r\n        this.ctx1.fillStyle = data.color\r\n        this.ctx1.fillRect(data.x, data.y, 1, 1)\r\n        this.ctx2.fillStyle = data.color\r\n        this.ctx2.fillRect(data.x, data.y, 1, 1)\r\n      })\r\n    })\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    this.DrawingBoard.removeEventListener('mouseenter', this.handelMouseEnter)\r\n    this.ws.close()\r\n  }\r\n\r\n  render () {\r\n    const width = this.state.width\r\n    const height = this.state.height\r\n    const left = this.state.offsetX + 'px'\r\n    const top = this.state.offsetY + 'px'\r\n    const transform = this.state.scale\r\n    const transformOrigin = this.state.origin\r\n    return (\r\n      <StyledPixelPainter>\r\n        <div className='tool-bar'>\r\n          <div \r\n            className='magnifying-lens'>\r\n            <canvas \r\n              ref={(canvas) => this.MagnifyingLens = canvas}\r\n              width={width}\r\n              height={height} \r\n              style={{left, top, transform, transformOrigin}}>\r\n            </canvas>\r\n            <div className='point' style={{transform: `${transform} translate(50%, 50%)`}}></div>\r\n          </div>\r\n          <div>\r\n            <p><span>当前放大倍数：X<i>{this.state.factor}</i>，鼠标滚轮向上缩小，向下放大。</span></p>\r\n            <ColorPicker \r\n              onClick={this.handleColorPickerClick} \r\n              onChange={this.handleColorPickerChange}\r\n              color={this.state.color}\r\n              isPickingColor={this.state.isPickingColor}\r\n            />\r\n            <ColorSelector \r\n              onChange={this.handleColorSelectorChange} \r\n              commonColors={this.state.commonColors}\r\n            />\r\n          </div>\r\n        </div>\r\n        <canvas \r\n          className='drawing-board'\r\n          ref={(canvas) => this.DrawingBoard = canvas} \r\n          width={width}\r\n          height={height}>\r\n        </canvas>\r\n        <span>在线人数：{ this.state.clientsCount }人</span>\r\n      </StyledPixelPainter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PixelPainter"],"sourceRoot":""}